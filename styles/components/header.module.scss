@use "../abstracts" as *;

$sizes: (
    7: 1260,
    6: 1070,
    5: 950,
    4: 840,
    3: 730,
    2: 540,
    1: 350,
);

.header {
    position: fixed;
    top: -100px;
    right: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    padding-top: $default_padding;
    background-color: $background_color;
    @media (max-height: 700px) {
        padding: $smaller_padding 0;
        flex-direction: row;
        justify-content: space-evenly;
        align-items: center;
    }
}

.info {
    display: flex;
    flex-direction: column;
    align-items: center;
    @media (min-width: 500px) and (max-height: 700px) {
        margin-left: auto;
    }
}

.company {
    letter-spacing: 0.32rem;
    text-align: right;
    text-transform: uppercase;
    text-indent: 8px;
    white-space: nowrap;
    font-weight: bolder;
    @media (max-height: 700px) {
        font-size: 14px;
        letter-spacing: 0.21rem;
    }
}

.name {
    font-size: 30px;
    text-transform: uppercase;
    white-space: nowrap;
    font-weight: bolder;
    @media (max-height: 700px) {
        font-size: 24px;
    }
}

.nav {
    padding: $smaller_padding;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-evenly;
    gap: 3rem;
    @media (max-height: 700px) {
        padding: $smallest_padding;
        display: contents;
    }
}

.nav_ul {
    display: contents;
    @media (max-height: 700px) {
        display: none;
    }
}

.nav_li {
    display: flex;
    align-items: center;
    min-height: 30px;
    flex: 1;
    justify-content: center;
    white-space: nowrap;

    @each $id, $size in $sizes {
        @media (max-width: #{$size}px) {
            &:nth-child(#{$id}) {
                display: none;
            }
        }
    }
}

.nav_sub_ul {
    // display: none;
    background-color: $contrast_primary;
    position: fixed;
    top: 105px;
    right: -220px;
    border: 2px solid $stroke_cl;
    box-sizing: border-box;
    transition-property: right;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;

    .nav_button[aria-expanded="true"] + & {
        right: 0;
    }

    @media (max-height: 700px) {
        top: 54px;
    }
    @media (max-width: 500px) {
        transition-duration: 0;
        transition-timing-function: none;
        transition-property: none;
        .nav_button[aria-expanded="true"] + & {
            left: 0;
        }
    }
}

.nav_sub_li {
    display: flex;
    align-items: center;
    min-height: 30px;
    flex: 1;
    justify-content: center;
    white-space: nowrap;
    padding: $smallest_padding;
    display: none;
    min-width: 200px;

    @each $id, $size in $sizes {
        @media (max-width: #{$size}px) {
            &:nth-child(#{$id}) {
                display: block;
            }
            &:nth-child(#{$id + 1}) {
                border-top: 2px solid $stroke_cl;
                box-sizing: border-box;
            }
        }
    }
    @media (max-height: 700px) {
        display: block;
        & + & {
            border-top: 2px solid $stroke_cl;
            box-sizing: border-box;
        }
    }
}

.nav_button {
    background-color: transparent;
    border-radius: 0.2rem;
    // border: 2.5px solid $nav_button_cl;
    box-sizing: content-box;
    width: 30px;
    height: 30px;
    display: none;

    @media (max-width: 1260px) {
        display: block;
    }

    @media (max-height: 700px) {
        display: block;
        margin-right: 2rem;
        @media (min-width: 500px) {
            margin-left: auto;
        }
    }

    &:hover :is(.top_rect, .bot_rect) {
        y: 45;
    }

    &:hover .top_rect {
        transform: rotate(45deg);
    }

    &:hover .mid_rect {
        opacity: 0;
    }

    &:hover .bot_rect {
        transform: rotate(-45deg);
    }

    &[aria-expanded="true"] {
        & :is(.top_rect, .bot_rect) {
            y: 45;
        }

        & .top_rect {
            transform: rotate(45deg);
        }

        & .mid_rect {
            opacity: 0;
        }

        & .bot_rect {
            transform: rotate(-45deg);
        }
    }

    .top_rect,
    .mid_rect,
    .bot_rect {
        transition: y 150ms ease-in 150ms, transform 150ms ease-in, opacity 0ms 150ms;
        transform-origin: center;
    }

    &:hover :is(.top_rect, .mid_rect, .bot_rect) {
        transition: y 150ms ease-in, transform 150ms ease-in 150ms, opacity 0ms 150ms;
    }
}

.hamburger {
    fill: $nav_button_cl;
    pointer-events: none;
}
